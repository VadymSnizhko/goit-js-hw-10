{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst selector = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('[data-start]');\nconst labels = [...document.querySelectorAll('.label')];\nconst valueTime = [...document.querySelectorAll(\".value\")];\n\nlabels.forEach(item => (item.textContent = item.textContent.toUpperCase()));\n\nlet userSelectedDate;\nlet dateNow;\n\nbtnStart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    //console.log(selectedDates[0]);\n    dateNow = new Date();\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < dateNow) {\n      //window.alert('Please choose a date in the future');\n      iziToast.show({\n        color: 'red',\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      btnStart.disabled = false;\n      valueTime.forEach((item,index) => valueTime[index].textContent = \"00\");\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbtnStart.addEventListener('click', onClickStart);\n\nfunction onClickStart(event) {\n  console.log(btnStart);\n  btnStart.disabled = true;\n\n  const difference = convertMs(userSelectedDate - dateNow);\n  Object.values(difference).forEach((value,index) => valueTime[index].textContent = value\n  )\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["btnStart","labels","valueTime","item","userSelectedDate","dateNow","options","selectedDates","iziToast","index","flatpickr","onClickStart","event","difference","convertMs","value","ms","days","hours","minutes","seconds"],"mappings":"iyBASiB,SAAS,cAAc,kBAAkB,EAC1D,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,CAAC,GAAG,SAAS,iBAAiB,QAAQ,CAAC,EAChDC,EAAY,CAAC,GAAG,SAAS,iBAAiB,QAAQ,CAAC,EAEzDD,EAAO,QAAQE,GAASA,EAAK,YAAcA,EAAK,YAAY,YAAa,CAAC,EAE1E,IAAIC,EACAC,EAEJL,EAAS,SAAW,GAEpB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErBF,EAAU,IAAI,KACdD,EAAmBG,EAAc,CAAC,EAC9BH,EAAmBC,EAErBG,EAAS,KAAK,CACZ,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,GAEDR,EAAS,SAAW,GACpBE,EAAU,QAAQ,CAACC,EAAKM,IAAUP,EAAUO,CAAK,EAAE,YAAc,IAAI,EAExE,CACH,EAEAC,EAAU,mBAAoBJ,CAAO,EAErCN,EAAS,iBAAiB,QAASW,CAAY,EAE/C,SAASA,EAAaC,EAAO,CAC3B,QAAQ,IAAIZ,CAAQ,EACpBA,EAAS,SAAW,GAEpB,MAAMa,EAAaC,EAAUV,EAAmBC,CAAO,EACvD,OAAO,OAAOQ,CAAU,EAAE,QAAQ,CAACE,EAAMN,IAAUP,EAAUO,CAAK,EAAE,YAAcM,CACjF,CACH,CAEA,SAASD,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}